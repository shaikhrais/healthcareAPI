services:
  # Healthcare API Application
  healthcare-api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: healthcare-api
    restart: unless-stopped
    ports:
      - "${PORT:-3001}:3001"
      - "${HTTPS_PORT:-3443}:3443"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3001
      - MONGODB_URI=mongodb://admin:healthcare123@mongodb:27017/healthcare?authSource=admin
      - JWT_SECRET=${JWT_SECRET}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - TWILIO_ACCOUNT_SID=${TWILIO_ACCOUNT_SID}
      - TWILIO_AUTH_TOKEN=${TWILIO_AUTH_TOKEN}
      - SENDGRID_API_KEY=${SENDGRID_API_KEY}
      - FIREBASE_SERVICE_ACCOUNT=${FIREBASE_SERVICE_ACCOUNT}
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./ssl:/app/ssl
    depends_on:
      - mongodb
      - redis
    networks:
      - healthcare-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: healthcare-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-healthcare123}
      - MONGO_INITDB_DATABASE=healthcare
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init:/docker-entrypoint-initdb.d
    ports:
      - "27018:27017"
    networks:
      - healthcare-network
    command: mongod --auth

  # Redis for Caching & Sessions
  redis:
    image: redis:7.2-alpine
    container_name: healthcare-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD:-healthcare123}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - healthcare-network

  # Nginx Reverse Proxy (Optional for production)
  nginx:
    image: nginx:alpine
    container_name: healthcare-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - healthcare-api
    networks:
      - healthcare-network
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  healthcare-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16